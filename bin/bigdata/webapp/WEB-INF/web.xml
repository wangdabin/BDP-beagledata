<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- ================= 静态变量配置 开始  ================= -->
	<!-- spring 配置文件路径配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:beans.xml,classpath:security.xml</param-value>
	</context-param>
	
	<!-- 设置log4j存放Log文件位置（通过spring统一进行管理） -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>log.root</param-value>
	</context-param>

	<!-- 加载log4j的配置文件 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.xml</param-value>
	</context-param>

	<!--Spring默认刷新Log4j配置文件的间隔,单位为millisecond -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	<!-- ================= 静态变量配置 结束 ================= -->
	
	<!-- ================= 监听器 开始  ================= -->
	<!--Spring用于log4j初始化的监听器 -->
	<listener>
		<listener-class>com.joe.core.listener.BDPContextLoaderListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- ================= 监听器 结束  ================= -->
	
	<!-- ================= 过滤器 开始  ================= -->
	<!-- 基本过滤器，设置basepath路经 -->
	<filter>
		<filter-name>basePathFilter</filter-name>
		<filter-class>com.sky.http.filter.BasePathFiler</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>basePathFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 访问过滤器，当没有初始化时是不允许访问REST服务路径，当初始化之后只允许访问初始化服务 -->
	<filter>
		<filter-name>accessFilter</filter-name>
		<filter-class>com.joe.core.filter.AccessFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>accessFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 调试过滤器 -->
	<filter>
		<filter-name>debugFilter</filter-name>
		<filter-class>com.joe.core.filter.DebugContentFilter</filter-class>
		<init-param>
			<param-name>filter</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>debugFilter</filter-name>
		<url-pattern>/ws/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>requestContextFilter</filter-name>
		<filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>requestContextFilter</filter-name>
		<url-pattern>/ws/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>requestContextFilter</filter-name>
		<url-pattern>/security/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		 <init-param>
		    <param-name>sessionFactoryBeanName</param-name>
		    <param-value>sessionFactory</param-value>
	     </init-param>
         <init-param>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>           
        </init-param>
        <init-param>
       		<param-name>flushMode</param-name>
   			<param-value>AUTO </param-value>        
        </init-param>
	</filter>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>/ws/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>/security/*</url-pattern>
	</filter-mapping>
	
	<!-- 开启认证授权脚本-->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>com.joe.core.filter.BDPSecurityFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- ================= 过滤器 结束  ================= -->
	
	<!-- ================= servlet 开始  ================= -->
	<!-- 初始化servlet 如数据库的初始化等操作 -->
	<servlet>
        <servlet-name>InitApplication</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>com.joe.core.application.InitApplication</param-value>
        </init-param>
        <init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>  
    		<param-value>true</param-value>  
		</init-param>
        <!-- 
        <load-on-startup>1</load-on-startup>
        -->
    </servlet>
    <servlet-mapping>
		<servlet-name>InitApplication</servlet-name>
		<url-pattern>/init/*</url-pattern>
	</servlet-mapping>
    
	<!-- 认证的servlet -->
	<servlet>
		<servlet-name>AuthApplication</servlet-name>
		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>com.joe.core.application.SecurityApplication</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>  
    		<param-value>true</param-value>  
		</init-param>
		<!-- 
		<load-on-startup>1</load-on-startup>
		 -->
	</servlet>
	<servlet-mapping>
		<servlet-name>AuthApplication</servlet-name>
		<url-pattern>/security/*</url-pattern>
	</servlet-mapping>
	
	<!-- 基本servlet 程序的入口 -->
	<servlet>
		<servlet-name>BDPApplication</servlet-name>
		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>com.joe.core.application.BDPApplication</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>  
    		<param-value>true</param-value>  
		</init-param>
		<!-- 
        <load-on-startup>1</load-on-startup>
        -->
	</servlet>
	<servlet-mapping>
		<servlet-name>BDPApplication</servlet-name>
		<url-pattern>/ws/*</url-pattern>
	</servlet-mapping>
	<!-- ================= servlet 结束  ================= -->
	


	<!-- 下载对应服务文件的servlet程序入口 -->
	<servlet>
        <servlet-name>downLoadResourceServlet</servlet-name>
        <servlet-class>com.joe.download.web.DownLoadResourceServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>downLoadResourceServlet</servlet-name>
        <url-pattern>/download/package</url-pattern>
    </servlet-mapping>

	<servlet>
		<servlet-name>configFileDownload</servlet-name>
		<servlet-class>com.joe.download.web.ConfigFileDownload</servlet-class>
	</servlet>
	
	<servlet-mapping>
        <servlet-name>configFileDownload</servlet-name>
        <url-pattern>/download/config</url-pattern>
    </servlet-mapping>
	<!-- ======= servlet 结束  ===== -->
	
	<!-- ================= 其它配置项 ================= -->
	<jsp-config>
		<taglib>
			<taglib-uri>http://java.sun.com/jsp/jstl/core</taglib-uri>
			<taglib-location>/WEB-INF/c.tld</taglib-location>
		</taglib>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<el-ignored>false</el-ignored>
			<scripting-invalid>true</scripting-invalid>
		</jsp-property-group>
	</jsp-config>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
